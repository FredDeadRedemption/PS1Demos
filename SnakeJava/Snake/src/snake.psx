bool gameOver = false;

game() {

    Snake snake = new Snake(8, 8);
    Snake snake2;

    Food food = new Food();

    Controller controller1 = new Controller(); //initializes gamepad
    Controller controller2 = new Controller(); //Controller is built in class

    start() {

        snake.food = food; //pass reference of food object to snake object
        food.snake = snake; //pass reference of snake object to food object
    }

    update() {
        if (checkDeath(snake)) {
            gameOver = true;
        }
    }
}

bool checkDeath(Snake snake) {
    //do the deaddening
}

class Segment {
    int x;
    int y;

    void move() {
        if (!gameOver) {
            //move em
        }
    }
}


class Snake : GameObject {

    Segment segments[1000];
    int length = 10;

    Food food; //reference to some food object
    
    Snake(int length, int size) {
        super.size = size;
        this.length = length;
    }

    start() {
        super.x = 16;
        super.y = 16;
        super.size = 16;
        super.texture = ...; //set super GameObjects values
    }

    update() {
        if(input.UP) {
            this.translate(-16, 0); //adds to x and y of super GameObject
        }
        .
        .
        .
        this.moveSegments();

    }

    void moveSegments() { //You are able to make your own functions/methods
        //They be movin'
        foreach (Segment segment in segments) {
            //move em
            segment.move();
        }
    }

    void grow() {
        //grow the snake
        segments[segments.length] = new Segment();
    }
}

class Food : GameObject {
    Snake snake; //reference to some snake object
    //it is illegal to initialize an object in a class, they are simply pointers
    // Snake snake = new Snake(8, 8); <- illegal, go to jail
    start() {
        super.x = 16;
        super.y = 16;
        super.size = 16;
        super.texture = ...; //set super GameObjects values

        this.snake = new Snake(8, 8); // <- this should be legal
    }

    update() {
        if(this.isColliding(snake)) {
            super.x = randomRange(0, ScreenWidth);
            super.y = randomRange(0, ScreenHeight); //Example of a inbuilt function/method
            snake.grow();
        }
    }
}